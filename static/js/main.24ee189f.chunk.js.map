{"version":3,"sources":["components/Card/styles.js","components/Card/index.js","components/Section/styles.js","components/Section/index.js","components/Modal/styles.js","components/Modal/index.js","utils/getFormValues.js","components/Main/ListForm/styles.js","components/Main/ListForm/index.js","components/Main/CardForm/styles.js","components/Main/CardForm/index.js","components/Main/styles.js","components/Main/index.js","App.js","index.js"],"names":["Container","styled","div","Title","h3","Description","p","Card","title","description","index","onRemove","sectionTitle","creationTime","draggable","onDragStart","e","data","dataTransfer","setData","JSON","stringify","onClick","Button","button","CardContainer","Section","cards","onAdd","name","onSave","onSectionRemove","onCardDrop","onDrop","preventDefault","parse","getData","onDragOver","sort","a","b","map","card","i","key","className","Close","OverLay","Modal","children","onClose","show","getFormValues","form","elements","obj","length","item","value","Form","Error","ListForm","onSectionFormSubmit","listObj","ref","useRef","useState","error","setError","onSubmit","values","current","hasOwnProperty","listTitle","type","placeholder","CardForm","onCardFormSubmit","Heading","h1","SectionContainer","Action","Message","Main","state","setState","showSectionModal","setShowSectionModal","listData","setListData","setDataToLocalStorage","requiredState","localStorage","setItem","onSectionModalClose","onAddCardToSection","listName","onCloseCardModal","onCardRemove","section","newState","filteredSection","filter","useEffect","getItem","previousSection","currentSection","restData","filteredPrev","Object","keys","Date","getTime","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24ee189f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.4);\n  border-bottom-right-radius: 16px;\n  position: relative;\n  margin: 8px;\n  background-color: #fff;\n  padding: 16px;\n  border: 1px solid orange;\n  button {\n    right: 0;\n    position: absolute;\n    top: 0;\n    z-index: 1;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-top: 0;\n  margin-bottom: 8px;\n`;\n\nexport const Description = styled.p`\n  margin: 0;\n`;\n","import React from \"react\";\nimport { Container, Title, Description } from \"./styles\";\n\nconst Card = ({ title, description, index, onRemove, sectionTitle, creationTime }) => {\n  const onDragStart = (e, sectionTitle, data) => {\n    e.dataTransfer.setData(\"data\", JSON.stringify({ sectionTitle, title, data }));\n  }\n\n  return (\n    <Container draggable onDragStart={(e) => { onDragStart(e, sectionTitle, { creationTime, title, description, index }); }}>\n      <Title>{title}</Title>\n      <Description>{description}</Description>\n      <button onClick={() => { onRemove(sectionTitle, index); }}>x</button>\n    </Container>\n  );\n};\n\nexport default Card;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 360px;\n  padding: 16px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  margin-top: 32px;\n  background-color: orange;\n  border: 1px solid orange;\n  position: relative;\n  padding-bottom: 72px;\n  margin: 8px;\n  overflow: visible;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n  text-transform: capitalize;\n  margin: 0;\n  padding: 8px 0 16px;\n  border-bottom: 1px solid #222;\n  width: 100%;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  bottom: 16px;\n  left: calc(50% - 20px);\n  z-index: 1;\n  width: 40px;\n  height: 40px;\n  background-color: #fff;\n  color: #555;\n  border: 1px solid #555;\n  border-radius: 50%;\n  font-weight: bold;\n  cursor: pointer;\n  font-size: 24px;\n  &.remove {\n    bottom: initial;\n    top: -16px;\n    right: -16px;\n    left: initial;\n  }\n`;\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  min-height: 200px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`;\n","import React from \"react\";\nimport Card from \"../Card\";\nimport { Title, Button, Container, CardContainer } from \"./styles\";\n\nconst Section = ({ title, cards, name, onSave, onAdd, onRemove, onSectionRemove, onCardDrop }) => {\n  const onAllowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  const onDrop = (e) => {\n    e.preventDefault();\n    const { sectionTitle, data } = JSON.parse(e.dataTransfer.getData(\"data\"));\n    if (sectionTitle !== title) {\n      onCardDrop(sectionTitle, title, data);\n    }\n  };\n\n  return (\n    <Container>\n      <Title>\n        {title}\n      </Title>\n      <CardContainer onDrop={onDrop} onDragOver={onAllowDrop}>\n        {cards.sort((a, b) => b.creationTime - a.creationTime).map((card, i) => (\n          <Card\n            key={i + 1}\n            {...card}\n            index={i}\n            sectionTitle={title}\n            onRemove={onRemove}\n          />\n        ))}\n      </CardContainer>\n      <Button onClick={() => { onAdd(title); }}>+</Button>\n      <Button className=\"remove\" onClick={() => { onSectionRemove(title); }}>x</Button>\n    </Container>\n  );\n};\n\nexport default Section;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    overflow: visible;\n    position: fixed;\n    z-index: 10;\n    top: calc(50% - 100px);\n    bottom: 0;\n    width: 500px;\n    height: 400px;\n    left: calc(50% - 200px);\n    box-shadow: 0 0 3px rgba(0, 0, 0, 0.4);\n    padding: 48px;\n    background-color: #fff;\n`;\n\nexport const Close = styled.button`\n    position: absolute;\n    top: -16px;\n    right: -16px;\n    background-color: transparent;\n    border: 1px solid #ccc;\n    font-size: 1.5rem;\n    height: 40px;\n    width: 40px;\n    background-color: #fff;\n    border-radius: 50%;\n`;\n\nexport const OverLay = styled.div`\n    background-color: rgba(0,0,0,0.7);\n    position: fixed;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    z-index: 9;\n    width: 100%;\n`;\n","import React from 'react';\nimport { Container, Close, OverLay } from './styles';\n\nconst Modal = ({ children, onClose, show }) => {\n    return show ? (\n        <>\n            <Container>\n                {children}\n                <Close onClick={onClose}>x</Close>\n            </Container>\n            <OverLay />\n        \n        </>\n    ) : null;\n};\n\nexport default Modal;\n","const getFormValues = (form) => {\n    const { elements } = form;\n    const obj ={};\n    for(let i = 0 ; i < elements.length ; i++){\n        const item = elements.item(i);\n        obj[item.name] = item.value;\n    }\n\n    return obj;\n}\n\nexport default getFormValues;","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    h3 {\n        text-align: center;\n        margin-top: 0;\n        margin-bottom: 56px;\n    }\n    input {\n        height: 40px;\n        margin-bottom: 16px;\n    }\n    button {\n        height: 48px;\n    }\n`;\n\nexport const Error = styled.div`\n    color: #ff0000;\n    font-size: 12px;\n    font-weight: bold;\n    margin-bottom: 16px;\n`;\n","import React, { useRef, useState } from 'react';\nimport getFormValues from '../../../utils/getFormValues';\nimport { Form, Error } from './styles';\n\nconst ListForm = ({ onSectionFormSubmit, listObj }) => {\n    const ref = useRef();\n    const [error, setError] = useState(null);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const values = getFormValues(ref.current);\n        if (listObj.hasOwnProperty(values.listTitle)) {\n            setError('List with same name already exists.');\n            return;\n        }\n        if (!values.listTitle) {\n            setError('List title cannot be empty.');\n            return;\n        }\n        onSectionFormSubmit(values);\n    };\n\n    return (\n        <Form onSubmit={onSubmit} ref={ref}>\n            <h3>Add a New List</h3>\n            <input type=\"text\" name=\"listTitle\" placeholder=\"Enter List Title\" />\n            {error && <Error>{error}</Error>}\n            <button type=\"submit\">Create List</button>\n        </Form>\n    );\n};\n\nexport default ListForm;\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    h3 {\n        text-align: center;\n        margin-top: 0;\n        margin-bottom: 16px;\n    }\n    input {\n        height: 40px;\n        margin-bottom: 8px;\n    }\n    button {\n        height: 48px;\n    }\n`;\n\nexport const Error = styled.div`\n    color: #ff0000;\n    font-size: 12px;\n    font-weight: bold;\n    margin-bottom: 8px;\n`;\n","import React, { useRef, useState } from 'react';\nimport getFormValues from '../../../utils/getFormValues';\nimport { Form, Error } from './styles';\n\nconst CardForm = ({ onCardFormSubmit, listTitle }) => {\n    const ref = useRef();\n    const [error, setError] = useState(null);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const values = getFormValues(ref.current);\n        if (!values.title) {\n            setError('Title cannot be empty.');\n            return;\n        }\n        if (!values.description) {\n            setError('Description cannot be empty.');\n            return;\n        }\n        onCardFormSubmit(values);\n    };\n\n    return (\n        <Form onSubmit={onSubmit} ref={ref}>\n            <h3>Add a New Card to {listTitle}</h3>\n            <input type=\"text\" name=\"title\" placeholder=\"Enter Card Title\" />\n            <input type=\"text\" name=\"description\" placeholder=\"Enter Card Description\" />\n            {error && <Error>{error}</Error>}\n            <button type=\"submit\">Create Card</button>\n        </Form>\n    );\n};\n\nexport default CardForm;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div``;\n\nexport const Heading = styled.h1`\n  text-align: center;\n  padding: 16px 0;\n  margin-top: 0;\n  border-bottom: 1px solid #e7e7e7;\n`;\n\nexport const SectionContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 24px;\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Action = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding: 0 24px;\n`;\n\nexport const Message = styled.div`\n  margin: 48px;\n  font-size: 14px;\n  text-align: center;\n  padding: 0 24px;\n`;\n","import React, { useState, useEffect } from \"react\";\n\nimport Section from \"../Section\";\nimport Modal from '../Modal';\nimport ListForm from \"./ListForm\";\nimport CardForm from \"./CardForm\";\nimport { Container, Heading, SectionContainer, Action, Message } from \"./styles\";\n\nconst Main = () => {\n  const [state, setState] = useState({});\n  const [showSectionModal, setShowSectionModal] = useState(false);\n  const [listData, setListData] = useState({\n    show: false,\n    listTitle: null,\n  });\n\n  const onAddList = () => {\n    setShowSectionModal(true);\n  };\n\n  const setDataToLocalStorage = (requiredState) => {\n    localStorage.setItem('trelloData', JSON.stringify(requiredState));\n  };\n\n  const onSectionFormSubmit = (values) => {\n    const newState = { ...state };\n    const requiredState = {\n      ...newState,\n      [values.listTitle]: [],\n    };\n    setState({\n      ...newState,\n      [values.listTitle]: [],\n    });\n    setState(requiredState);\n    setDataToLocalStorage(requiredState);\n    onSectionModalClose();\n  };\n\n  const onSectionModalClose =() => {\n    setShowSectionModal(false);\n  }\n\n  const onCardFormSubmit = (values) => {\n    const newState = { ...state };\n    const requiredState = {\n      ...newState,\n      [listData.listTitle]: [...newState[listData.listTitle], {\n        ...values,\n        creationTime: new Date().getTime(),\n      }],\n    };\n    setState(requiredState);\n    setDataToLocalStorage(requiredState);\n    onCloseCardModal();\n  };\n\n  const onAddCardToSection = (listName) => {\n    setListData({\n      show: true,\n      listTitle: listName,\n    });\n  };\n\n  const onCloseCardModal =() => {\n    setListData({\n      show: false,\n      listTitle: null,\n    });\n  }\n\n  const onCardRemove = (section, index) => {\n    const newState = { ...state };\n    const filteredSection = newState[section].filter((card, i) => i !== index);\n    const requiredState = {\n      ...newState,\n      [section]: filteredSection,\n    };\n    setState(requiredState);\n    setDataToLocalStorage(requiredState);\n  };\n\n  const onSectionRemove = (section) => {\n    const newState = { ...state };\n    delete newState[section];\n    setState(newState);\n    setDataToLocalStorage(newState);\n  };\n\n  useEffect(() => {\n    const data = localStorage.getItem('trelloData');\n    if (data) {\n      setState(JSON.parse(data));\n    }\n  }, []);\n\n  const onCardDrop = (previousSection, currentSection, data) => {\n    const newState = { ...state };\n    const { index, ...restData } = data;\n    const filteredPrev = newState[previousSection].filter((card, i) => index !== i);\n    newState[currentSection] = [...newState[currentSection], restData];\n    const requiredState = {\n      ...newState,\n      [previousSection]: filteredPrev,\n    };\n    setState(requiredState);\n    setDataToLocalStorage(requiredState);\n  };\n\n  return (\n    <Container>\n      <Heading>Trello Board</Heading>\n      <Action>\n        <button onClick={onAddList}>Add List</button>\n      </Action>\n      {Object.keys(state).length === 0 ? (\n        <Message>Please click on Add List button to create a new list</Message>\n      ) : (\n        <SectionContainer>\n          {Object.keys(state).map((section) => (\n            <Section\n              key={section}\n              title={section}\n              name={section}\n              cards={state[section]}\n              onAdd={onAddCardToSection}\n              onRemove={onCardRemove}\n              onSectionRemove={onSectionRemove}\n              onCardDrop={onCardDrop}\n            />\n          ))}\n        </SectionContainer>\n      )}\n      {showSectionModal && <Modal show={showSectionModal} onClose={onSectionModalClose}>\n          <ListForm onSectionFormSubmit={onSectionFormSubmit} listObj={state} />\n        </Modal>\n      }\n      {listData.show && <Modal show={listData.show} onClose={onCloseCardModal}>\n          <CardForm onCardFormSubmit={onCardFormSubmit} listTitle={listData.listTitle} />\n        </Modal>\n      }\n    </Container>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nimport Main from \"./components/Main\";\n\nconst App = () => {\n  return <Main />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}